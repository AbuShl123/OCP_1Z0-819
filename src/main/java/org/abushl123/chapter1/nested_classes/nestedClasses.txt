Nested classes can be of four types:

    - Inner class: A non-static type defined at the member level of a class
    - Static Inner class: A static type defined at the member level of a class
    - Local class: A class defined within a method body
    - Anonymous class: A special case of a local class that does not a name

Attention:
    interfaces and enums cannot be declared as local or anonymous classes


=================
Inner class
=================

    (!) Can be declared public, protected, package-private (default), or private
    (!) Can extend any class and implement interfaces
    (!) Can be marked abstract or final
    (!) Cannot declare static fields or methods, except for static final fields
    (!) Can access members of the outer class including private members

=====================
static Nested class
=====================

    (!) The nesting creates a namespace because the enclosing class name must be used to refer to it.
    (!) It can be made private or use one of the other access modifiers to encapsulate it.
    (!) The enclosing class can refer to the fields and methods of the static nested class.